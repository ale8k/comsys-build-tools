name: Security Scan
description: Run Go vulernability scan and Trivy repo scan

inputs:
  upload_results:
    description: Whether to upload scan results to GitHub Security tab
    required: false
    default: 'false'

  upload_artifact:
    description: Whether to upload scan results as an artifact
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Go Vulnerability Check
      id: govulncheck
      uses: golang/govulncheck-action@v1
      with:
        output-format: 'sarif'
        output-file: 'govuln-results.sarif'

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@0.23.0
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table' 
        severity: 'CRITICAL'
        exit-code: '1'
        output: 'trivy-results.sarif'
      env:
        TRIVY_DB_REPOSITORY: ghcr.io/canonical/comsys-build-tools/trivy-db:2

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: ${{ inputs.upload_results == 'true' }}
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Upload GoVuln scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: ${{ inputs.upload_results == 'true' }}
      with:
        sarif_file: 'govuln-results.sarif'

    - name: Upload trivy scan results as artifact
      uses: actions/upload-artifact@v3
      if: ${{ inputs.upload_artifact == 'true' }}
      with:
        name: 'trivy-security-scan-results'
        path: 'trivy-results.sarif'

    - name: Upload govuln scan results as artifact
      uses: actions/upload-artifact@v3
      if: ${{ inputs.upload_artifact == 'true' }}
      with:
        name: 'govuln-security-scan-results'
        path: 'govuln-results.sarif'